name: Deploy

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: mkdocs

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          includeInvalidCommits: true
          excludeTypes: build,docs,style
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Commit CHANGELOG.md
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -d ${{ github.ref_name }}
          git push origin --delete ${{ github.ref_name }}
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]"
          git tag -a ${{ github.ref_name }}
          git push --all

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements_docs.txt
      - name: Run mkdocs
        run: |
          set +e  # Do not exit shell on failure
          export GL_PROJECT=kiyoon/python-project-template-docs
          export HTTPS_REMOTE="https://gitlab-ci-token:${{ secrets.GL_TOKEN }}@gitlab.com/$GL_PROJECT.git"

          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add gitlab "$HTTPS_REMOTE"
          git pull gitlab gl-pages:gl-pages

          # Delete the latest page because we're going to make it as an alias to the latest version.
          mike delete --deploy-prefix public -r $HTTPS_REMOTE -b gl-pages latest
          out=$(mike deploy --deploy-prefix public -r $HTTPS_REMOTE -p -b gl-pages -u ${{ github.ref_name }} latest 2> stderr.txt)
          exit_code=$?
          err=$(<stderr.txt)

          mike set-default --deploy-prefix public -r $HTTPS_REMOTE -p -b gl-pages latest

          # Display the raw output in the step
          echo "${out}"
          echo "${err}"

          # Display the Markdown output in the job summary
          echo "\`\`\`python" >> $GITHUB_STEP_SUMMARY
          echo "${out}" >> $GITHUB_STEP_SUMMARY
          echo "${err}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          exit ${exit_code}
